;ZX Master Mind
;Version MM62 - @ Roberto Zaffanella

LM EQU 48000   ;INDIRIZZO PER IL CODICE OGGETTO

VAR EQU 49620  ;PUNTO DI PARTENZA PER LE VARIABILI
;LE VARIABILI USATE ANCHE DAL PROGRAMMA BASIC, INIZIANO CON "MEM"

C1 EQU 49728   ;1296 * 12 BYTES  
;C1 PUNTA AL PRIMO FT (FT= FIT CODE)

ROUTINE EQU VAR+0    ;1 BYTE
;IL PRG BASIC CODIFICA OGNI ROUTINE CON UN NUMERO.

MEMFT EQU VAR+1     ;2 BYTES
;NUMERO TOTALE DEI CP RIMANENTI CIOE' DEI FT

;MEMVFLAG EQU VAR+3      ;1 BYTE
;NON USATA

MEMTUTTICP EQU VAR+4    ;2 BYTES
;USATA DA VISFT E VISBC. SETTATO UGUALE A FT O 1296

C0 EQU VAR+6            ;10 BYTES
;CODICE TENTATIVO

CH  EQU VAR+16           ;2 BYTES
;CODICE CHIAVE. PUNTATO CON IX O IY +10 E +11

CS EQU VAR+18           ;12 BYTES
;CODICE SEGRETO

MEMVR EQU VAR+31        ;1 BYTE
;USATA DA VISFT E VISBC. RIGA IN CUI STAMPARE L'FT O BC

MEMLASTPRT EQU VAR+32   ;2 BYTES
;USATA DA VISFT E VISBC. INDIRIZZO DI MEMORIA DELL'ULTIMO FT O BC STAMPATO

MEMNUMCPPRT EQU VAR+34  ;2 BYTES
;USATA DA VISFT E VISBC. NUMERO DI FT O BC STAMPATI

CONTROV EQU VAR+36      ;2 BYTES
;SETTATA COME NUMCP DA SIMULACORE PER IL CONTO ALLA ROVESCIA 

; 2 BYTES LIBERI 38 E 39

OFFSETXO EQU VAR+40  ;XX BYTES
;USATA DA SIMULACORE

;NUMCS EQU VAR+80  ;2 BYTE
;NON USATA

NUMCP EQU VAR+82  ;2 BYTE
;NUMERO DI CP CONSIDEARTI NELLA ROUTINE SIMULACORE 

MEMPESOMIN EQU VAR+84   ;2 BYTE
;USATA DA TROVAPESOMINORE. CONTIENE IL PESO DEL CP CHE HA IL PESO PIU' BASSO

MEMR EQU VAR+86      ;1 BYTE
;USATA SOLO DA CONTOROVESCIA. RIGA DEL CP GIOCATO PASSATA DAL BASIC

MEMBC EQU VAR+87     ;2 BYTE
;NUMERO TOTALE DEI BC. USATA SOLO DA NUMBESTCODES

MEME EQU VAR+89     ;2 BYTE
;(MEME)CONTIENE E=INT (RND*BC)+1 - BC E' IL TOTALE DEI BC
;USATA SOLO DA GIOCATAPRG

TEMP EQU VAR+91     ;12 BYTES
;USATA DA "COMPATTA" PER SWAP CP


;----------------------------------------------------
ORG LM

LD A,(ROUTINE)

CP 1
JP Z,INIZ

CP 2
JP Z,CLEANVIDEO

CP 3 
JP Z,DEFNUMCOL

CP 4
JP Z,TROVACH

CP 5
JP Z,ELIMINACP

CP 6
JP Z,VISFT

CP 7
JP Z,SIMULA

CP 8
JP Z,VISBC

CP 9
JP Z,GIOCATAPRG

RET


;-----------------------------------------------------
;INIZIALIZZAZIONE DEI CP (CP SONO IN GENERALE I CODICI POSSIBILI) 
;I CP PARTONO DA 1296 E POI DIMINUISCONO AD OGNI GIOCATA
;INIZ VIENE CHIAMATA PRIMA DI OGNI PARTITA 
INIZ
CALL INIZ_CODICI
CALL INIZ_NUMCOL
CALL INIZ_PESI
CALL TROVAPESOMINORE
CALL NUMBESTCODES
LD HL,1296
LD (MEMFT),HL
RET


;INIZIALIZZA I PRIMI 4 BYTE DEL CODICE
;UN BYTE PER OGNI POSIZIONE VALORIZZATO CON IL NUMERO DEL COLORE
INIZ_CODICI
LD IX,C1
LD D,1
LOOP_E
LD E,1
LOOP_B
LD B,1
LOOP_C
LD C,1
NEXT_CP
LD (IX+0),D
LD (IX+1),E
LD (IX+2),B
LD (IX+3),C
PUSH BC
LD BC,12
ADD IX,BC
POP BC
INC C
LD A,7
CP C
JR NZ,NEXT_CP
INC B
LD A,7
CP B
JR NZ,LOOP_C
INC E
LD A,7
CP E
JR NZ,LOOP_B
INC D
LD A,7
CP D
JR NZ,LOOP_E
RET


;INIZIALIZZA 6 BYTE DA C1+4. OGNI BYTE CORRISPONE A UN COLORE
;E CONTIENE IL NUMERO DI VOLTE CHE QUESTO COLORE E' PRESENTE NEL CP 
INIZ_NUMCOL
LD IX,C1
LD BC,1296  ; 1296 CP
RPT_NEXT_CP
LD D,0 
LD (IX+4),0
LD (IX+5),0
LD (IX+6),0
LD (IX+7),0
LD (IX+8),0
LD (IX+9),0

LD A,(IX+0)    
ADD A,3        ;PER PUNTARE AI BYTE DI NUMCOL
LD E,A
PUSH IX
POP HL
ADD HL,DE      ;HL PUNTA AL BYTE DEL COLORE 
INC (HL)

LD A,(IX+1)
ADD A,3
LD E,A
PUSH IX
POP HL
ADD HL,DE
INC (HL)

LD A,(IX+2)
ADD A,3
LD E,A
PUSH IX
POP HL
ADD HL,DE
INC (HL)

LD A,(IX+3)
ADD A,3
LD E,A
PUSH IX
POP HL
ADD HL,DE
INC (HL)

LD DE,12    ;PASSA AL CP SUCCESSIVO
ADD IX,DE
DEC BC
LD A,B
OR C
JP NZ,RPT_NEXT_CP
RET


;INIZIALIZZA I CAMPI PESO.
;IX+10 E' IL CAMPO FIT E VIENE SETTATO A $FF. UN FT ESCLUSO VERRA' FLAGGATO COME "AA" 
;IX+11 E' IL CAMPO BC E VIENE SETTATO A $BC SE IL CODICE E' DI  TIPO 1234 1123 1122.
;SETTATO A $EE SE E'DEL TIPO  1112 O 1111

INIZ_PESI 

LD IX,C1
LD BC,1296  ; 1296 CP
LD DE,12

RPT_SETPESI
LD (IX+10),$FF
LD (IX+11),$EE

LD A,(IX+4)
CP 3              ;SE A=>3 ALLORA NO CARRY
JR NC,NOBC 

LD A,(IX+5)
CP 3
JR NC,NOBC 

LD A,(IX+6)
CP 3
JR NC,NOBC 

LD A,(IX+7)
CP 3
JR NC,NOBC 

LD A,(IX+8)
CP 3
JR NC,NOBC 

LD A,(IX+9)
CP 3
JR NC,NOBC 

LD (IX+11),$BC     ;CAMPO BC SETTATO A $BC

NOBC
ADD IX,DE      ;PASSA AL CP SUCCESSIVO
DEC BC
LD A,B
OR C
JP NZ,RPT_SETPESI
LD A,$BC
LD (MEMPESOMIN),A
RET


;--------------------------------------------------------
;PULISCE LA ZONA VIDEO DI VISUALIZZA FIT E BEST CODES 
CLEANVIDEO

LD IY,23610
LD A,2
CALL 5633

;PRTENZA DA RIGA 2
LD B,2

NEXTRIGA
;PARTENZA DA COLONNA 18
LD C,18

NEXTCOL
LD A,22  ;AT
RST 16

LD A,B   ;RIGA
RST 16

LD A,C  ;COLONNA
RST 16

LD A,32  ; METTI IN A UNO SPAZIO " "
RST 16   ; STAMPA AT B,C;" "

INC C
LD A,C
CP 31       ; FINO A COLONNA 30
JR NZ,NEXTCOL

INC B
LD A,B
CP 21       ;FINO A RIGA 20
JR NZ,NEXTRIGA

RET

;-----------------------------------------------------
;PASSA IL CODICE DA BASIC IN MEMORIA.
;RICEVE I CAMPI "CODICE" CON UNA POKE DAL BASIC (C0 +0 +1 +2 +3)
;VALORIZZA I CAMPI NUMCOL DI C0

DEFNUMCOL
LD IX,C0

LD (IX+4),0    ;RESETTA I CAMPI "NUMERO DI COLORI"
LD (IX+5),0
LD (IX+6),0
LD (IX+7),0
LD (IX+8),0
LD (IX+9),0
LD D,0

LD A,(IX+0)
ADD A,3        ;PER PUNTARE AI BYTE DI NUMCOL
LD E,A
PUSH IX
POP HL
ADD HL,DE      ;HL PUNTA AL BYTE DEL COLORE
INC (HL)

LD A,(IX+1)
ADD A,3
LD E,A
PUSH IX
POP HL
ADD HL,DE
INC (HL)

LD A,(IX+2)
ADD A,3
LD E,A
PUSH IX
POP HL
ADD HL,DE
INC (HL)

LD A,(IX+3)
ADD A,3
LD E,A
PUSH IX
POP HL
ADD HL,DE
INC (HL)

RET


;----------------------------------------------------------
;CONFRONTA CS CON C0 E METTI I NERI IN C0+10 E
;I BIACHI+NERI IN C0+11
;CHIAMATA DA GIOC>PRG
TROVACH
LD IY,C0
LD IX,CS
CALL TEST
LD A,C
LD (C0+10),A   ;NUMERO DI NERI
LD A,B
LD (C0+11),A   ;NUMERO DI NERI + BIANCHI
RET


;--------------------------------------------------------------------
;TROVA IL NUMERO DI NERI+BIANCHI CONFRONTANDO C0 NUM COLORI 
;PUNTATO DA IY E UN CP PUNTATO DA IX
;RITORNA B CON IL NUMERO DI X+O (VIENE MODIFICATO AF E BC 
;IX^CP o IX^CS   IY^C0   B=NUM DI NERI+BIANCHI
TEST

LD C,(IX+4)
LD A,(IY+4)
CP C
JR C,JUMP1  ;SE A<C SALTA
LD A,C      ;METTI IN A IL NUN COL MINORE TRA (IX+3) E (IY+3)
JUMP1
LD B,A      ;TIENE IN B IL NUMERO DI NERI+BIANCHI

LD C,(IX+5)
LD A,(IY+5)
CP C
JR C,JUMP2  
LD A,C      
JUMP2
ADD A,B      
LD B,A

LD C,(IX+6)
LD A,(IY+6)
CP C
JR C,JUMP3  
LD A,C      
JUMP3
ADD A,B     
LD B,A

LD C,(IX+7)
LD A,(IY+7)
CP C
JR C,JUMP4  
LD A,C      
JUMP4
ADD A,B      
LD B,A

LD C,(IX+8)
LD A,(IY+8)
CP C
JR C,JUMP5  
LD A,C      
JUMP5
ADD A,B     
LD B,A

LD C,(IX+9)
LD A,(IY+9)
CP C
JR C,JUMP6  
LD A,C      
JUMP6
ADD A,B      
LD B,A

;------------------------------------------------------------------
;TROVA IL NUMERO DI NERI CONFRONTANDO C0 PUNTATO DA IY
;E UN CP PUNTATO DA IX. ;RITORNA C CON IL NUMERO DI NERI
;VIENE MODIFICATO AF E BC 
;IX^CP   IY^C0   C=NUM DI NERI


LD C,0
PEG1
LD A,(IX+0)
CP (IY+0)
JP NZ, PEG2
INC C
PEG2
LD A,(IX+1)
CP (IY+1)
JP NZ, PEG3
INC C
PEG3
LD A,(IX+2)
CP (IY+2)
JP NZ, PEG4
INC C
PEG4
LD A,(IX+3)
CP (IY+3)
RET NZ
INC C
RET




;---------------------------------------------------------------------------
;ELIMINAZIONE CODICI IMPOSSIBILI
;CONFRONTA C0 CON I CP. SE CH NON E' UGUALE A QUELLO IN C0+10/11 
;ELIMINA IL CP. 
;I CP BUONI CIOE' I FIT CODE VENGONO SPOSTATI DA C1 FINO A FT 
;FT E' IL TOTALE DEL NUMERO DI CP RIMASTI
ELIMINACP

CALL FLAG_CP
LD A,E
OR D
RET Z       ;FT=0 ALMOST ONE KEY CODE WRONG

CALL COMPATTA

RET


;--------------------------------------
;METTE FF IN IX+10 PER TUTTI I CP BUONI
FLAG_CP
LD HL,(MEMFT)    ;HL=NUMERO DI FT DI PARTENZA

LD A,0            ;RESETTA IL TOTALE DEI FT
LD (MEMFT),A
LD (MEMFT+1),A

LD DE,(MEMFT)    ;DE E' IL NUOVO CONTATORE FT

LD IX,C1
LD IY,C0

LOOP5
LD (IX+10),$AA    ;SETTA DI DAFAULT IL CP IN C1 COME UN FIT CODE ELIMINATO
CALL TEST    ;RITORNA C=NUM DI X E B=O+X
LD A,(IY+10)  ;A=NUMERO DI X DI C0 QUELLE DATE DAL GIOCATORE O DAL COMPUTER
CP C
JR NZ,NEGATIVO1   ;SE IL NUM DI X E' DIVERSO, ELIMINA IL CP

LD A,(IY+11)      ;METTE IN A IL NUM DI O+X DI C0
CP B              ;SE IL NUM DI X+O E' DIVERSO, ELIMINA IL CP
JR NZ,NEGATIVO1

LD (IX+10),$FF    ;SE IL CP NON VIENE ELIMINATO, VIENE FLAGGATO COME FT CON IL VALORE $FF 
INC DE            ;INCREMENTA IL TOTALE DEI FT
 

NEGATIVO1
PUSH DE           ;AL CP RIMANE IL FLAG $AA E QUINDI VIENE ELIMINATO
LD DE,12
ADD IX,DE         ;IX PASSA AL CP SUCCESSIVO
POP DE

DEC HL
LD A,H
OR L
JP NZ,LOOP5       ;RIPETI PER TUTTI I CP
LD (MEMFT),DE    ;AGGIORNA IL NUMERO TOTALE DI FT

RET

;---------------------------------------
;COMPATTA TUTTI GLI FT, QUELLI CON $FF A PARTIRE DA C1
;CALCOLA L'INDIRIZZO DEL PRIMO CP NELL'AREA FT+1 CIOE' NELL'AREA 
;DEI CP ESCLUSI. CERCA PARTENDO DA C1 IL PRIMO CP ELIMINATO E QUANDO LO TROVA,
;CERCA IL PRIMO FT NELL'AREA DEGLI ESCLUSI. qUANDO LO TROVA LI SCAMBIA DI POSIZIONE.
;RIPETE FINO A CHE TUTTI GLI FT PARTONO DA C1 E ARRIVANO FINO A FT


COMPATTA


LD IX,C1-12       ;IX PUNTA AI CP A PARTIRE DA C1
LD BC,(MEMFT)    ;BC E' IL NUMERO DI CONFRONTI PER LO SWAP
INC BC

LD HL,(MEMFT)    ;CALCOLO DELL'OFFSET PER L'AREA DEI CP NON BUONI
DEC HL
LD DE,12
; HL=HL*DE
CALL $30A9
LD DE,C1
ADD HL,DE
PUSH HL
POP IY            ;IY PUNTA ALLA POSIZIONE DEL PRIMO CP NON BUONO

LD DE,12

FINDDELETEDCP
ADD IX,DE         ;CERCA I CP NON BUONI NELL'AREA DEI BUONI
DEC BC            ;
LD A,B
OR C
RET Z             ;RITORNA QUANDO FINISCE LA ZONA DEI CP BUONI
LD A,$AA            ;SE IX+10 E'$AA IL CP NON E' BUONO E QUINDI FAI LO SWAP
CP (IX+10)
JR Z,READYFORSWAP 
JR FINDDELETEDCP

READYFORSWAP

CERCAFT
ADD IY,DE         ;CERCA I CP BUONI NELL'AREA DEI NON BUONI
LD A,$FF
CP (IY+10)
JR NZ,CERCAFT     ;QUANDO TROVATO, PROCEDI CON LO SWAP

PUSH BC     ;SALVA BC
PUSH DE     ;SALVA DE

PUSH IX
POP HL         ;HL SOURCE DATA
LD DE,TEMP     ;DE TARGET DATA
LD BC,12       ;NUMERB OF BYTE TO MOVE
LDIR

PUSH IY
POP HL         ;HL SOURCE DATA
PUSH IX
POP DE         ;DE TARGET DATA
LD BC,12       ;NUMERB OF BYTE TO MOVE
LDIR

LD HL,TEMP     ;HL SOURCE DATA
PUSH IY
POP DE         ;DE TARGET DATA
LD BC,12       ;NUMERB OF BYTE TO MOVE
LDIR
 
POP DE         ;RIPRISTINA DE
POP BC         ;RIPRISTINA BC

JR FINDDELETEDCP


;----------------------------------------------------
;VISUALIZZA FIT CODES
VISFT

CALL CLEANVIDEO

LD IX,(MEMLASTPRT)   ;VIENE PASSATO DAL BASIC E SETTATO COME C1 
LD B,8               ;NUMERO DI FT DA VISUALIZZARE PRIMA DI TORNARE AL BASIC
LD C,0

NEXTFT
PUSH BC
CALL PRINTCP
POP BC
LD HL,(MEMNUMCPPRT)  ;NUMERO DI FT VISUALIZZATI. SETTATO A 0 DAL BASIC
INC HL
LD (MEMNUMCPPRT),HL 
LD DE,12
ADD IX,DE
LD HL,(MEMTUTTICP)   ;SETTATO INIZIALMENTE UGUALE A FT DAL BASIC
DEC HL
LD (MEMTUTTICP),HL
LD (MEMLASTPRT),IX   ;SALVA L'INDIRIZZO DELL'ULTIMO FT VISUALIZZATO 
LD A,H
OR L
RET Z                ;SE I FT DA VISUALIZZARE SONO FINITI, RITORNA
DJNZ NEXTFT          ;RIPETI PER 8 FT DA VISUALIZZARE
RET


;------------------------------------------------------- 
;VISUALIZZA BEST CODES
VISBC

CALL CLEANVIDEO

LD IX,(MEMLASTPRT)
LD B,8
LD C,0

NEXTBC
LD A,(MEMPESOMIN)         ;VISUALIZZA SOLO SE (IX+11) E' UGUALE A PESOMIN
CP (IX+11)
JR Z,CONTINUAPRINTBC
LD DE,12
ADD IX,DE
LD HL,(MEMTUTTICP)     ;SETTATO A 1296 DAL BASIC
DEC HL
LD (MEMTUTTICP),HL 
LD A,H
OR L
RET Z
JR NEXTBC


CONTINUAPRINTBC
PUSH BC
CALL PRINTCP
POP BC
LD HL,(MEMNUMCPPRT)
INC HL
LD (MEMNUMCPPRT),HL 
LD DE,12
ADD IX,DE
LD HL,(MEMTUTTICP)
DEC HL
LD (MEMTUTTICP),HL 
LD A,H
OR L
RET Z
DJNZ NEXTBC
LD (MEMLASTPRT),IX
RET



;-------------------------
PRINTCP
LD HL,MEMVR    ;VISUALIZZA RIGA. SETTATA INIZIALMENTE A 2 DAL BASIC
INC (HL)
INC (HL)

LD IY,23610

LD A,2
CALL 5633

LD A,22  ;AT
RST 16

LD A,(MEMVR)   ;RIGA
RST 16

LD A,20  ;COLONNA
RST 16


LD A,$AA          ;SE E' BC INCONSISTENTE STAMPA *
CP (IX+10)
JR Z,STAMPA_ASTERISCO

LD A,32        ;ALTRIMENTI STAMPA SPAZIO
RST 16         ;STAMPA UNO SPAZIO
JR CONT765


STAMPA_ASTERISCO
LD A,42        ;*
RST 16         ;STAMPA UN "*"


CONT765


;................ primo piolo
LD A,16  ;INK
RST 16

LD A,(IX+0)   ;VALORE INK
RST 16

LD A,22  ;AT
RST 16

LD A,(MEMVR)   ;RIGA
RST 16

LD A,22  ;COLONNA
RST 16

LD A,153
RST 16

;................ secondo

LD A,16  ;INK
RST 16

LD A,(IX+1)   ;VALORE INK
RST 16

LD A,22  ;AT
RST 16

LD A,(MEMVR)   ;RIGA
RST 16

LD A,24  ;COLONNA
RST 16

LD A,153
RST 16

;.................... terzo

LD A,16  ;INK
RST 16

LD A,(IX+2)   ;VALORE INK
RST 16

LD A,22  ;AT
RST 16

LD A,(MEMVR)   ;RIGA
RST 16

LD A,26  ;COLONNA
RST 16

LD A,153
RST 16

;.................... quarto

LD A,16  ;INK
RST 16

LD A,(IX+3)   ;VALORE INK
RST 16

LD A,22  ;AT
RST 16

LD A,(MEMVR)   ;RIGA
RST 16

LD A,28  ;COLONNA
RST 16

LD A,153
RST 16

RET


;------------------------------------------
SIMULA

LD BC,(MEMFT)
LD HL,317    ;SE FT > 317 ESEGUI SOLO ELIMINA BC INCONSISTENTI  E NUMBESTCODES
OR A        ;AZZERA I FLAG
SBC HL,BC
JP NC,CONT741
CALL ELIMINAINCONSISTENTI
CALL NUMBESTCODES
RET

CONT741
CALL CLSPESI
CALL SIMULACORE
CALL TROVAPESOMINORE
CALL ELIMINAINCONSISTENTI
CALL NUMBESTCODES
RET

;----------------- 
;CLS PESI - SETTA A $FF I CAMPI PESO DI TUTTI I CP
CLSPESI

LD BC,1296
LD IX,C1
LD DE,12
CLS
LD (IX+11),$FF
ADD IX,DE
DEC BC
LD A,B
OR C
JR NZ,CLS
RET


;------------------
;IY PUNTA AI CP - IX PUNTA AI CS
SIMULACORE

LD HL,(MEMFT)

LD BC,50    ;SE FT <= 50 CONSIDERA SOLO I FIT, ALTRIMENTI CONSIDERA TUTTI I 1296 CODICI
PUSH HL
OR A        ;AZZERA I FLAG
SBC HL,BC
POP HL
JR NC,CONTINUA888  ; SE HL>BC CIOE' FT>50 SALTA A CONTINUA888. SE I FT SONO PIU' DI 50 USA SOLO I FT

LD BC,3    ;SE FT<3 CONSIDERA SOLO I FIT, ALTRIMENTI CONSIDERA TUTTI I 1296 CODICI
PUSH HL
OR A        ;AZZERA I FLAG
SBC HL,BC
POP HL
JR C,CONTINUA888  ; SE HL<=BC CIOE' SE FT<=3 SALTA A CONTINUA888
LD HL,1296    ; SIMULA CON TUTTI I CP

CONTINUA888
LD (NUMCP),HL     ;SE FT>50 OR FT<3 THEN NUMCP=FT ELSE NUMCP=1296
LD (CONTROV),HL   ;SALVA (NUMCP) IN CONTO ALLA ROVESCIA
LD IY,C1          ;IY PUNTA AI CP
;INC (IY+11)       ;SETTA IL PESO A ZERO DOPO CHE CLSPESI LO HA SETTATO A $FF

NEXTCP88
INC (IY+11)       ;SETTA IL PESO A ZERO DOPO CHE CLSPESI LO HA SETTATO A $FF
LD IX,C1         ;IX PUNTA AI CS
LD DE,12
;CLEAN OFFSET
LD B,14
LD HL,OFFSETXO    ;HL PUNTA ALL'OFFSET DEI NERI E BIANCHI
AZZERAOFFSET
LD (HL),0         ; SETTA 0 NELLE 14 CASELLE DELL'OFFSET
INC HL
DJNZ AZZERAOFFSET
LD HL,(MEMFT)    ;HL E' IL NUMERO DI CS

RIPETISETTAOFFSET
CALL SETTAOFFSET     ;CONFRONTA IY (CP) CON IX (CS) E METTE CH NELL'OFFSET
DEC HL               ;DECREMENTA IL NUMERO DI CS E QUANDO SONO FINITI VAI A CALCPESO
LD A,H
OR L
JP Z,CALCPESO  ;SE I CS SONO FINITI VAI A CALCOLA PESO
ADD IX,DE      ;PASSA AL PROSSIMO CS
JR RIPETISETTAOFFSET

CALCPESO
LD A,0
LD B,14        ;NUMERO DI TIPI DI CH NELL'OFFSET
LD HL,OFFSETXO

NEXTCH01
LD A,(IY+11)   ;A= PESO DEL CP. AL PRIMO CICLO E' ZERO
OR A
SBC A,(HL)     ;PESO DEL CP - PESOOFFSET
JR NC,CONT456   
LD A,(HL)      ;SE PESO DEL CP < PESOOFFSET ALLORA METTI IL PESO DELL'OFFSET NEL CP
LD (IY+11),A     

CONT456        
INC HL         ;HL PUNTA AL PROSSIMO CH DELL'OFFSET
DJNZ NEXTCH01

LD HL,(NUMCP)  ;DECREMENTA IL NUMERO DI CP. SE FINITI, ROTORNA.
DEC HL
LD A,H
OR L
RET Z

ADD IY,DE      ;IY PASSA AL PROSSIMO CP
LD (NUMCP),HL  ;SALVA IL NUMERO DI CP
PUSH IY
CALL CONTOROVESCIA   ;VISUALIZZA A VIDEO IL CONTATORE
POP IY
;INC (IY+11)       ;SETTA IL PESO A ZERO DOPO CHE CLSPESI LO HA SETTATO A $FF
JP NEXTCP88

SETTAOFFSET ;INCREMENTA IL CH RISULTANTE DAL TEST DI IX E IY
CALL TEST   ;TORNA C CON IL NUMERO DI NERI E B CON IL NUMERO DI NERI+BIANCHI
LD A,B
SUB C
LD B,A         ;METTE IN B IL NUMERO DI BIANCHI
;C=NUMERO DI NERI
;B=NUMERO DI BIANCHI

LD A,0
CP C
JR Z,ZERO_NERI

LD A,1
CP C
JR Z,UNO_NERO

LD A,2
CP C
JR Z,DUE_NERI

LD A,3
CP C
JR Z,TRE_NERI

LD A,4
CP C
JR Z,QUATTRO_NERI


ZERO_NERI
LD A,0
CP B
JR Z,CH_

LD A,1
CP B
JR Z,CH_O

LD A,2
CP B
JR Z,CH_OO

LD A,3
CP B
JR Z,CH_OOO

LD A,4
CP B
JR Z,CH_OOOO


UNO_NERO
LD A,0
CP B
JR Z,CH_X

LD A,1
CP B
JR Z,CH_OX

LD A,2
CP B
JR Z,CH_OOX

LD A,3
CP B
JR Z,CH_OOOX


DUE_NERI
LD A,0
CP B
JR Z,CH_XX

LD A,1
CP B
JR Z,CH_OXX

LD A,2
CP B
JP Z,CH_OOXX


TRE_NERI
LD A,(OFFSETXO+12)
INC A
LD (OFFSETXO+12),A
RET

QUATTRO_NERI
LD A,(OFFSETXO+13)
INC A
LD (OFFSETXO+13),A
RET

CH_
LD A,(OFFSETXO+0)
INC A
LD (OFFSETXO+0),A
RET

CH_O
LD A,(OFFSETXO+1)
INC A
LD (OFFSETXO+1),A
RET

CH_OO
LD A,(OFFSETXO+2)
INC A
LD (OFFSETXO+2),A
RET 

CH_OOO
LD A,(OFFSETXO+3)
INC A
LD (OFFSETXO+3),A
RET

CH_OOOO
LD A,(OFFSETXO+4)
INC A
LD (OFFSETXO+4),A
RET

CH_X
LD A,(OFFSETXO+5)
INC A
LD (OFFSETXO+5),A
RET

CH_OX
LD A,(OFFSETXO+6)
INC A
LD (OFFSETXO+6),A
RET 

CH_OOX
LD A,(OFFSETXO+7)
INC A
LD (OFFSETXO+7),A
RET 

CH_OOOX
LD A,(OFFSETXO+8)
INC A
LD (OFFSETXO+8),A
RET 

CH_XX
LD A,(OFFSETXO+9)
INC A
LD (OFFSETXO+9),A
RET 

CH_OXX
LD A,(OFFSETXO+10)
INC A
LD (OFFSETXO+10),A
RET 

CH_OOXX
LD A,(OFFSETXO+11)
INC A
LD (OFFSETXO+11),A
RET


;---------
;TROVA PESOMIN 
TROVAPESOMINORE

LD BC,1296
LD DE,12
LD IX,C1 
LD HL,MEMPESOMIN
LD (HL),255    ;SETTA PESOMIN=255

LOOP6
LD A,(HL)      ;A=255 AL PRIMO GIRO
CP (IX+11)        
JR C,CONTINUA01   ;SE (IX+11) > (PESOMIN) THEN (PESOMIN)= (IX+11)

LD A,(IX+11)
LD (HL),A

CONTINUA01        
ADD IX,DE
DEC BC
LD A,B
OR C
JP NZ,LOOP6
RET


;---------
;ELIMINA BC INCONSISTENTI
;SE CI SONO BC CHE SONO ANCHE FT, QUELLI  INCONSISTENTI VANNO ELIMINATI
; 
ELIMINAINCONSISTENTI

LD BC,(MEMFT)
LD DE,12
LD IX,C1
LD H,0   ;H E' IL FLAG. SE H=0 NON CI SONO BC TRA I FT

LOOP888
LD A,(MEMPESOMIN)
CP (IX+11)
JR NZ, CONT333    ;SETTA IL FLAG H A 1 SE TROVATO UN BC TRA I FT
LD H,1
CONT333
ADD IX,DE
DEC BC
LD A,B
OR C
JR NZ,LOOP888     ;CICLA PER TUTTI GLI FT

XOR A
CP H
RET Z      ;SE NON E' STATO TROVATO UN BC TRA I FT, RITORNA

LD HL,1296
LD BC,(MEMFT)
OR A        ;AZZERA I FLAG
SBC HL,BC   ;HL E' IL NUMERO DEI CP NON FT
RET Z       ;SE FT=1296 TORNA. CASO DEL PRIMO TENTATIVO GIOC>PRG


LOOP546
LD (IX+11),$FF    ;SETTA IL PESO A FF PER ELIMINARE TUTTI I BC NON FT
ADD IX,DE
DEC HL
LD A,H
OR L
JR NZ,LOOP546     ;RIPETI PER TUTTI I CP NON FT

RET




;---------
CONTOROVESCIA

LD HL,(CONTROV)
DEC HL
LD (CONTROV),HL

LD IY,23610
LD A,2
CALL 5633

; IMPOSTA FLASH 1
LD A,18
RST 16

LD A,1
RST 16

; AZZERA COL 30 31
LD A,22  ;AT
RST 16

LD A,(MEMR)   ;RIGA
RST 16

LD A,30  ;COLONNA
RST 16

LD A,32 
RST 16

LD A,32 
RST 16

; PRINT CONTROV A COL 29
LD A,22  ;AT
RST 16

LD A,(MEMR)   ;RIGA
RST 16

LD A,28  ;COLONNA
RST 16

LD BC,(CONTROV)
CALL 6683

RET


;-----------------------------------
NUMBESTCODES
;CONTA BEST CODES

LD A,0
LD (MEMBC),A
LD (MEMBC+1),A
LD BC,1296
LD DE,12
LD IX,C1

LOOP444
LD A,(MEMPESOMIN)
CP (IX+11)
     
JR NZ, CONT335
LD HL,(MEMBC)     ;SE (IX+11)=(MEMPESOMIN) THEN INC (MEMBC)
INC HL
LD (MEMBC),HL     ;(MEMBC) E' IL NUMERO DI BC

CONT335
ADD IX,DE
DEC BC
LD A,B
OR C
JR NZ,LOOP444
RET


;-------------------------------
GIOCATAPRG

LD IX,C1
LD IY,C0

LD BC,(MEME) ;(MEME)CONTIENE E=INT (RND*BC)+1 - BC E' IL TOTALE DEI BC
LD DE,12


NEXTBC1
LD A,(MEMPESOMIN)
CP (IX+11)
JR NZ,NEXTCP 
DEC BC
LD A,B
OR C
JR Z,TROVATOCP
NEXTCP
ADD IX,DE
JR NEXTBC1

TROVATOCP
LD A,(IX+0)
LD (IY+0),A
LD A,(IX+1)
LD (IY+1),A
LD A,(IX+2)
LD (IY+2),A
LD A,(IX+3)
LD (IY+3),A
LD A,(IX+4)
LD (IY+4),A
LD A,(IX+5)
LD (IY+5),A
LD A,(IX+6)
LD (IY+6),A
LD A,(IX+7)
LD (IY+7),A
LD A,(IX+8)
LD (IY+8),A
LD A,(IX+9)
LD (IY+9),A
LD A,(IX+10)
LD (IY+10),A
LD A,(IX+11)
LD (IY+11),A
RET 


;-------------------------------

;PER DEBUG
;ATTENDI2
;LD A,1
;CP 2
;JR Z,ATTENDI2





